on:
- push
name: Build and test
permissions: {}
jobs:
  go-versions:
    name: Lookup go versions
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.versions.outputs.matrix }}
      minimal: ${{ steps.versions.outputs.minimal }}
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v3
    - uses: arnested/go-version-action@v1
      id: versions
  go_generate:
    name: Check generated code is up to date
    runs-on: ubuntu-latest
    needs: go-versions
    env:
      workdir: go/src/github.com/arnested/ssh2iterm2
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v3
      with:
        path: ${{env.workdir}}
    - name: Setup Go ${{ needs.go-versions.outputs.minimal }}
      uses: actions/setup-go@v3
      with:
        go-version: ${{ needs.go-versions.outputs.minimal }}
    - name: go generate
      env:
        GO111MODULE: 'on'
        GOPATH: ${{ github.workspace }}/go
      working-directory: ${{env.workdir}}
      run: go generate -x
    - name: Diff after go generate
      working-directory: ${{env.workdir}}
      run: git diff --exit-code
  build_and_test:
    name: Build and test
    runs-on: macos-latest
    needs: go-versions
    strategy:
      matrix:
        go-version: ${{ fromJSON(needs.go-versions.outputs.matrix) }}
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v3
    - name: Setup Go$ {{ matrix.go-version }}
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}
    - name: go test
      env:
        GO111MODULE: 'on'
        GOOS: darwin
        GOARCH: amd64
        # We enable cgo to be able to test with `-race`.
        CGO_ENABLED: 1 
      run: go test -v -race -cover -covermode=atomic -coverprofile=coverage.txt ./...
    - name: Upload coverage report to Codecov
      uses: codecov/codecov-action@v3
      with:
        flags: go${{ matrix.go-version }}
  license_check:
    name: License check
    runs-on: ubuntu-latest
    needs: go-versions
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v3
    - name: Setup Go ${{ needs.go-versions.outputs.minimal }}
      uses: actions/setup-go@v3
      with:
        go-version: ${{ needs.go-versions.outputs.minimal }}
    - name: Install wwhrd
      env:
        GO111MODULE: 'off'
      run: go get -u github.com/frapposelli/wwhrd
    - name: go mod vendor
      env:
        GO111MODULE: 'on'
      run: go mod vendor
    - name: wwhrd check
      run: wwhrd check
